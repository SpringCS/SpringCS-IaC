AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This stack deploys the core network infrastructure and IAM resources to be
  used for a service hosted in Amazon ECS using AWS Fargate.
  
Parameters:

#GlobalVPC-CIDR
  VpcNetworkParam:
    Type: String
    Description: VPC CIDR. For more info, see http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html#VPC_Sizing
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.

# Public Subnets
  PublicAZ1SubnetBlock:
    Type: String
    Description: Subnet CIDR for first Availability Zone
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.

  PublicAZ2SubnetBlock:
    Type: String
    Description: Subnet CIDR for second Availability Zone
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.

# Private Subnets
  PrivateAZ1SubnetBlock:
    Type: String
    Description: Subnet CIDR for first Availability Zone (e.g. us-west-2a, us-east-1b)
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.

  PrivateAZ2SubnetBlock:
    Type: String
    Description: Subnet CIDR for second Availability Zone (e.g. us-west-2b, us-east-1c)
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.
  #VPCTag:
  #  Type: String
  #  Description: Tags para la VPC
    
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !Ref VpcNetworkParam
      Tags:
        - Key: Name
          Value: SpringCS-VPC
      
  PublicSubnetOne:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone:
        'Fn::Select':
          - 0
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicAZ1SubnetBlock
      MapPublicIpOnLaunch: true

  PublicSubnetTwo:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone:
        'Fn::Select':
          - 1
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicAZ2SubnetBlock
      MapPublicIpOnLaunch: true

  PrivateSubnetOne:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone:
        'Fn::Select':
          - 0
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateAZ1SubnetBlock

  PrivateSubnetTwo:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone:
        'Fn::Select':
          - 1
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateAZ2SubnetBlock

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'

  GatewayAttachement:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: GatewayAttachement
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetOneRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnetOne
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetTwoRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnetTwo
      RouteTableId: !Ref PublicRouteTable

  NatGatewayOneAttachment:
    Type: 'AWS::EC2::EIP'
    DependsOn: GatewayAttachement
    Properties:
      Domain: vpc

  NatGatewayTwoAttachment:
    Type: 'AWS::EC2::EIP'
    DependsOn: GatewayAttachement
    Properties:
      Domain: vpc

  NatGatewayOne:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt NatGatewayOneAttachment.AllocationId
      SubnetId: !Ref PublicSubnetOne

  NatGatewayTwo:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt NatGatewayTwoAttachment.AllocationId
      SubnetId: !Ref PublicSubnetTwo

  PrivateRouteTableOne:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC

  PrivateRouteOne:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateRouteTableOne
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayOne

  PrivateRouteTableOneAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTableOne
      SubnetId: !Ref PrivateSubnetOne

  PrivateRouteTableTwo:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC

  PrivateRouteTwo:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateRouteTableTwo
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayTwo

  PrivateRouteTableTwoAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTableTwo
      SubnetId: !Ref PrivateSubnetTwo


  #VPCParameter:
    #Type: AWS::SSM::Parameter
    #Properties:
      #Description: !Sub "${Application}/${Environment}: VPC"
      #Name: !Sub "/cloudformation/${Application}/${Environment}/vpc/id"
      #Type: String
      #Value: !Ref VPC
  
  #PublicSubnetAZ0Parameter:
   # Type: AWS::SSM::Parameter
    #Properties:
     # Description: !Sub "${Application}/${Environment}: VPC"
     # Name: !Sub "/cloudformation/${Application}/${Environment}/vpc/az/public/0"
     # Type: String
     # Value: !Ref PublicSubnetOne

  #PublicSubnetAZ1Parameter:
   # Type: AWS::SSM::Parameter
    #Properties:
     # Description: !Sub "${Application}/${Environment}: VPC"
      #Name: !Sub "/cloudformation/${Application}/${Environment}/vpc/az/public/1"
      #Type: String
      #Value: !Ref PublicSubnetTwo

  #PrivateSubnetAZ0Parameter:
   # Type: AWS::SSM::Parameter
    #Properties:
     # Description: !Sub "${Application}/${Environment}: VPC"
      #Name: !Sub "/cloudformation/${Application}/${Environment}/vpc/az/private/0"
      #Type: String
      #Value: !Ref PrivateSubnetOne

  #PrivateSubnetAZ1Parameter:
   # Type: AWS::SSM::Parameter
    #Properties:
     # Description: !Sub "${Application}/${Environment}: VPC"
      #Name: !Sub "/cloudformation/${Application}/${Environment}/vpc/az/private/1"
      #Type: String
      #Value: !Ref PrivateSubnetTwo

Outputs:
  CurrentRegion:
    Description: Region
    Value: !Ref 'AWS::Region'
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - CurrentRegion
  CurrentAccount:
    Description: AccountID
    Value: !Ref 'AWS::AccountId'
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - CurrentAccount
  VPCId:
    Description: VpcId
    Value: !Ref VPC
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - VPCId
  PublicSubnetOne:
    Description: PublicSubnetOne
    Value: !Ref PublicSubnetOne
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - PublicSubnetOne
  PublicSubnetTwo:
    Description: PublicSubnetTwo
    Value: !Ref PublicSubnetTwo
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - PublicSubnetTwo
  PrivateSubnetOne:
    Description: PrivateSubnetOne
    Value: !Ref PrivateSubnetOne
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - PrivateSubnetOne
  PrivateSubnetTwo:
    Description: PrivateSubnetTwo
    Value: !Ref PrivateSubnetTwo
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - PrivateSubnetTwo