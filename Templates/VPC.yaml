AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This stack deploys the core network infrastructure and conectivity resources to be
  used for a Springfield Car Share Solution.
  
Parameters:

#GlobalVPC-CIDR
  VpcNetworkParam:
    Type: String
    Description: VPC CIDR. For more info, see http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html#VPC_Sizing
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.

# Public Subnets
  PublicSubNet-AZ1Block:
    Type: String
    Description: Subnet CIDR for first Availability Zone
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.

  PublicSubNet-AZ2Block:
    Type: String
    Description: Subnet CIDR for second Availability Zone
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.

# Private Subnets
  ProcessSubNet-AZ1Block:
    Type: String
    Description: Subnet CIDR for first Availability Zone (e.g. us-west-2a, us-east-1b)
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.

  ProcessSubNet-AZ2Block:
    Type: String
    Description: Subnet CIDR for second Availability Zone (e.g. us-west-2b, us-east-1c)
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.
  
  # Data Subnets
  DataSubNet-AZ1Block:
    Type: String
    Description: Subnet CIDR for first Availability Zone (e.g. us-west-2a, us-east-1b)
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.

  DataSubNet-AZ2Block:
    Type: String
    Description: Subnet CIDR for second Availability Zone (e.g. us-west-2b, us-east-1c)
    AllowedPattern: "^(10|172|192)\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/(16|17|18|19|20|21|22|23|24|25|26|27|28)$"
    ConstraintDescription: must be valid IPv4 CIDR block (/16 to /28) from the private address ranges defined in RFC 1918.
  #VPCTag:
  #  Type: String
  #  Description: Tags para la VPC
    
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: SpringCS
      
  PublicSubNet-AZ1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone:
        'Fn::Select':
          - 0
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubNet-AZ1Block
      MapPublicIpOnLaunch: true

  PublicSubNet-AZ2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone:
        'Fn::Select':
          - 1
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubNet-AZ2Block
      MapPublicIpOnLaunch: true

  ProcessSubNet-AZ1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone:
        'Fn::Select':
          - 0
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
      VpcId: !Ref VPC
      CidrBlock: !Ref ProcessSubNet-AZ1Block

  ProcessSubNet-AZ2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone:
        'Fn::Select':
          - 1
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
      VpcId: !Ref VPC
      CidrBlock: !Ref ProcessSubNet-AZ2Block
 
  DataSubNet-AZ1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone:
        'Fn::Select':
          - 0
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
      VpcId: !Ref VPC
      CidrBlock: !Ref DataSubNet-AZ1Block

  DataSubNet-AZ2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone:
        'Fn::Select':
          - 1
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
      VpcId: !Ref VPC
      CidrBlock: !Ref DataSubNet-AZ2Block
 
  AWS_Internet_Gateway:
    Type: 'AWS::EC2::InternetGateway'
  
  GatewayAttachement:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref AWS_Internet_Gateway

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public Route Table

  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: GatewayAttachement
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref AWS_Internet_Gateway

  PublicSubnetOneRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubNet-AZ1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetTwoRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubNet-AZ2
      RouteTableId: !Ref PublicRouteTable

  NatGatewayOne:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt NatGatewayOneAttachment.AllocationId
      SubnetId: !Ref PublicSubNet-AZ1

  NatGatewayTwo:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt NatGatewayTwoAttachment.AllocationId
      SubnetId: !Ref PublicSubNet-AZ2
      
  NatGatewayOneAttachment:
    Type: 'AWS::EC2::EIP'
    DependsOn: GatewayAttachement
    Properties:
      Domain: vpc

  NatGatewayTwoAttachment:
    Type: 'AWS::EC2::EIP'
    DependsOn: GatewayAttachement
    Properties:
      Domain: vpc

  ProcessRouteTableOne:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC

  ProcessRouteOne:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref ProcessRouteTableOne
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayOne

  ProcessRouteTableOneAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref ProcessRouteTableOne
      SubnetId: !Ref ProcessSubNet-AZ1

  ProcessRouteTableTwo:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC

  ProcessRouteTwo:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref ProcessRouteTableTwo
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayTwo

  ProcessRouteTableTwoAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref ProcessRouteTableTwo
      SubnetId: !Ref ProcessSubNet-AZ2

PublicSecgroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Servicios Habilitados para Public Layer
      VpcId: !Ref VPC
      SecurityGroupIngress:
      
      - IpProtocol: -1
        FromPort: 0
        ToPort: 0
        CidrIp: 0.0.0.0/0
      
      SecurityGroupEgress:
      - IpProtocol: -1
        FromPort: 0
        ToPort: 0
        CidrIp: 0.0.0.0/0
        Tags:
        - Key: Name
          Value: PublicSecgroup:

  Process-SegGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Servicios Habilitados para Process Layer
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupID: !Ref PublicSecgroup
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        SourceSecurityGroupID: !Ref PublicSecgroup
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        SourceSecurityGroupID: !Ref DataDB-SecGroup
      - IpProtocol: -1
        FromPort: 0
        ToPort: 0
        CidrIp: 10.0.1.0/24, 10.0.10.0/24
      SecurityGroupEgress:
      - IpProtocol: -1
        FromPort: 0
        ToPort: 0
        CidrIp: 0.0.0.0/0
        Tags:
        - Key: Name
          Value: Process-SegGroup:

  DataDB-SecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Servicios Habilitados para DataBase Layer
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        SourceSecurityGroupID: !Ref Process-SegGroup
      - IpProtocol: -1
        FromPort: 0
        ToPort: 0
        CidrIp: 10.0.2.0/24, 10.0.20.0/24
      SecurityGroupEgress:
      - IpProtocol: -1
        FromPort: 0
        ToPort: 0
        CidrIp: 0.0.0.0/0
        Tags:
        - Key: Name
          Value: DataDB-SecGroup:


Outputs:
  CurrentRegion:
    Description: Region
    Value: !Ref 'AWS::Region'
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - CurrentRegion
  CurrentAccount:
    Description: AccountID
    Value: !Ref 'AWS::AccountId'
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - CurrentAccount
  VPCId:
    Description: VpcId
    Value: !Ref VPC
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - VPCId
  PublicSubNet-AZ1:
    Description: PublicSubNet-AZ1
    Value: !Ref PublicSubNet-AZ1
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - PublicSubNet-AZ1
  PublicSubNet-AZ2:
    Description: PublicSubNet-AZ2
    Value: !Ref PublicSubNet-AZ2
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - PublicSubNet-AZ2
  ProcessSubNet-AZ1:
    Description: ProcessSubNet-AZ1
    Value: !Ref ProcessSubNet-AZ1
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - ProcessSubNet-AZ1
  ProcessSubNet-AZ2:
    Description: ProcessSubNet-AZ2
    Value: !Ref ProcessSubNet-AZ2
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - ProcessSubNet-AZ2

  DataSubNet-AZ1:
    Description: DataSubNet-AZ1
    Value: !Ref DataSubNet-AZ1
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - DataSubNet-AZ1
  DataSubNet-AZ2:
    Description: DataSubNet-AZ2
    Value: !Ref DataSubNet-AZ2
    Export:
      Name: !Join 
        - ':'
        - - !Ref 'AWS::StackName'
          - DataSubNet-AZ2
          
  PublicSecgroup:
    Description: Security Group to public access 
    Value: !Ref PublicSecgroup
    Export:
      Name: !Sub ${AWS::StackName}-PublicSecgroup
  
  Process-SegGroup:
    Description: Security Group to Process access 
    Value: !Ref Process-SegGroup
    Export:
      Name: !Sub ${AWS::StackName}-Process-SegGroup
      
  DataDB-SecGroup:
    Description: Security Group to Database access 
    Value: !Ref DataDB-SecGroup
    Export:
      Name: !Sub ${AWS::StackName}-DataDB-SecGroup